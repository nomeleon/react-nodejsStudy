{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\hello-react\\\\src\\\\IterationSample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // const IterationSample = () => {\n//   const names = [\"눈사람\", \"얼음\", \"눈\", \"바람\"];\n//   const nameList = names.map((name, index) => <li key={index}>{name}</li>);\n//   return <ul>{nameList}</ul>;\n// };\n// const IterationSample = () => {\n//   const [names, setNames] = useState([\n//     { id: 1, text: \"눈사람\" },\n//     { id: 2, text: \"얼음\" },\n//     { id: 3, text: \"눈\" },\n//     { id: 4, text: \"바람\" },\n//   ]);\n//   const [inputText, setInputText] = useState(\"\");\n//   //새로운 항목 추가 시 사용할 id\n//   const [nextId, setNextId] = useState(5);\n//   const nameList = names.map((name) => <li key={name.id}>{name.text}</li>);\n//   return <ul>{nameList}</ul>;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IterationSample = () => {\n  _s();\n\n  const [names, setNames] = useState([{\n    id: 1,\n    text: \"눈사람\"\n  }, {\n    id: 2,\n    text: \"얼음\"\n  }, {\n    id: 3,\n    text: \"눈\"\n  }, {\n    id: 4,\n    text: \"바람\"\n  }]);\n  const [inputText, setInputText] = useState(\"\"); //새로운 항목 추가 시 사용할 id\n\n  const [nextId, setNextId] = useState(5);\n\n  const onChange = e => setInputText(e.target.value);\n\n  const onClick = () => {\n    const nextNames = names.concat({\n      id: nextId,\n      // nextId 값을 id로 설정하고\n      text: inputText\n    });\n    setNextId(nextId + 1); //nextId 값에 1을 더해준다.\n\n    setNames(nextNames); // names 값을 업데이트한다.\n\n    setInputText(\"\"); // inputText를 비운다.\n  };\n\n  const onRemove = id => {\n    const nextNames = names.filter(name => name.id !== id);\n    setNames(nextNames);\n  };\n\n  const nameList = names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n    onDoubleClick: () => onRemove(name.id),\n    children: name.text\n  }, name.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nameList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IterationSample, \"gw2D3f66q2n0q+enDCOivNw7nAE=\");\n\n_c = IterationSample;\nexport default IterationSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"IterationSample\");","map":{"version":3,"names":["React","useState","IterationSample","names","setNames","id","text","inputText","setInputText","nextId","setNextId","onChange","e","target","value","onClick","nextNames","concat","onRemove","filter","name","nameList","map"],"sources":["C:/react/hello-react/src/IterationSample.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// const IterationSample = () => {\n//   const names = [\"눈사람\", \"얼음\", \"눈\", \"바람\"];\n//   const nameList = names.map((name, index) => <li key={index}>{name}</li>);\n//   return <ul>{nameList}</ul>;\n// };\n\n// const IterationSample = () => {\n//   const [names, setNames] = useState([\n//     { id: 1, text: \"눈사람\" },\n//     { id: 2, text: \"얼음\" },\n//     { id: 3, text: \"눈\" },\n//     { id: 4, text: \"바람\" },\n//   ]);\n//   const [inputText, setInputText] = useState(\"\");\n//   //새로운 항목 추가 시 사용할 id\n//   const [nextId, setNextId] = useState(5);\n\n//   const nameList = names.map((name) => <li key={name.id}>{name.text}</li>);\n//   return <ul>{nameList}</ul>;\n// };\n\nconst IterationSample = () => {\n  const [names, setNames] = useState([\n    { id: 1, text: \"눈사람\" },\n    { id: 2, text: \"얼음\" },\n    { id: 3, text: \"눈\" },\n    { id: 4, text: \"바람\" },\n  ]);\n  const [inputText, setInputText] = useState(\"\");\n  //새로운 항목 추가 시 사용할 id\n  const [nextId, setNextId] = useState(5);\n\n  const onChange = (e) => setInputText(e.target.value);\n  const onClick = () => {\n    const nextNames = names.concat({\n      id: nextId, // nextId 값을 id로 설정하고\n      text: inputText,\n    });\n    setNextId(nextId + 1); //nextId 값에 1을 더해준다.\n    setNames(nextNames); // names 값을 업데이트한다.\n    setInputText(\"\"); // inputText를 비운다.\n  };\n\n  const onRemove = (id) => {\n    const nextNames = names.filter((name) => name.id !== id);\n    setNames(nextNames);\n  };\n\n  const nameList = names.map((name) => (\n    <li key={name.id} onDoubleClick={() => onRemove(name.id)}>\n      {name.text}\n    </li>\n  ));\n\n  return (\n    <>\n      <input value={inputText} onChange={onChange} />\n      <button onClick={onClick}>add</button>\n      <ul>{nameList}</ul>\n    </>\n  );\n};\n\nexport default IterationSample;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;IAAEI,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CADiC,EAEjC;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAFiC,EAGjC;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAHiC,EAIjC;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAJiC,CAAD,CAAlC;EAMA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C,CAP4B,CAQ5B;;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;;EAEA,MAAMU,QAAQ,GAAIC,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;EACA,MAAMC,OAAO,GAAG,MAAM;IACpB,MAAMC,SAAS,GAAGb,KAAK,CAACc,MAAN,CAAa;MAC7BZ,EAAE,EAAEI,MADyB;MACjB;MACZH,IAAI,EAAEC;IAFuB,CAAb,CAAlB;IAIAG,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT,CALoB,CAKG;;IACvBL,QAAQ,CAACY,SAAD,CAAR,CANoB,CAMC;;IACrBR,YAAY,CAAC,EAAD,CAAZ,CAPoB,CAOF;EACnB,CARD;;EAUA,MAAMU,QAAQ,GAAIb,EAAD,IAAQ;IACvB,MAAMW,SAAS,GAAGb,KAAK,CAACgB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACf,EAAL,KAAYA,EAAnC,CAAlB;IACAD,QAAQ,CAACY,SAAD,CAAR;EACD,CAHD;;EAKA,MAAMK,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CAAWF,IAAD,iBACzB;IAAkB,aAAa,EAAE,MAAMF,QAAQ,CAACE,IAAI,CAACf,EAAN,CAA/C;IAAA,UACGe,IAAI,CAACd;EADR,GAASc,IAAI,CAACf,EAAd;IAAA;IAAA;IAAA;EAAA,QADe,CAAjB;EAMA,oBACE;IAAA,wBACE;MAAO,KAAK,EAAEE,SAAd;MAAyB,QAAQ,EAAEI;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEI,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAKM;IAAL;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD,CAxCD;;GAAMnB,e;;KAAAA,e;AA0CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}