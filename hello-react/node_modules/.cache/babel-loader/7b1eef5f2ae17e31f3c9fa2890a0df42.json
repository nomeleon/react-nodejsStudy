{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\hello-react\\\\src\\\\EventPractice..js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\"; // class EventPractice extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>event practice</h1>\n//         <input\n//           type=\"text\"\n//           name=\"message\"\n//           placeholder=\"here\"\n//           onChange={(e) => {\n//             console.log(e);\n//             console.log(e.target.value);\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// class EventPractice extends Component {\n//   state = {\n//     message: \"\",\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <h1>event practice</h1>\n//         <input\n//           type=\"text\"\n//           name=\"message\"\n//           placeholder=\"here\"\n//           onChange={(e) => {\n//             this.setState({\n//               message: e.target.value,\n//             });\n//             console.log(this.state.message);\n//           }}\n//         />\n//         <button\n//           onClick={() => {\n//             alert(this.state.message);\n//             this.setState({\n//               message: \"\",\n//             });\n//           }}\n//         >\n//           check\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n// class EventPractice extends Component {\n//   state = {\n//     message: \"\",\n//   };\n//   //일반 함수 형식 : 생성자 바인딩 필요\n//   //   constructor(props) {\n//   //     super(props);\n//   //     this.handleChange = this.handleChange.bind(this);\n//   //     this.handleClick = this.handleClick.bind(this);\n//   //   }\n//   //   handleChange(e) {\n//   //     this.setState({\n//   //       message: e.target.value,\n//   //     });\n//   //     console.log(e.target.value);\n//   //   }\n//   //   handleClick() {\n//   //     this.setState({\n//   //       message: \"\",\n//   //     });\n//   //   }\n//   //화살표 함수 바인딩 불필요\n//   handleChange = (e) => {\n//     this.setState({\n//       message: e.target.value,\n//     });\n//     alert(e.target.name);\n//   };\n//   handleClick = () => {\n//     this.setState({\n//       message: \"\",\n//     });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <h1>event practice</h1>\n//         <input\n//           type=\"text\"\n//           name=\"message_name\"\n//           placeholder=\"here\"\n//           value={this.state.message}\n//           onChange={this.handleChange}\n//         />\n//         <button onClick={this.handleClick}>check</button>\n//       </div>\n//     );\n//   }\n// }\n// class EventPractice extends Component {\n//   state = {\n//     username: \"\",\n//     id: \"\",\n//     message: \"\",\n//   };\n//   handleChange = (e) => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n//   handleClick = () => {\n//     alert(this.state.username + \": \" + this.state.message);\n//     this.setState({\n//       username: \"\",\n//       id: \"\",\n//       message: \"\",\n//     });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <h1>event practice</h1>\n//         <input\n//           type=\"text\"\n//           name=\"username\"\n//           placeholder=\"name\"\n//           value={this.state.username}\n//           onChange={this.handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"id\"\n//           placeholder=\"id\"\n//           value={this.state.id}\n//           onChange={this.handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"message\"\n//           placeholder=\"message\"\n//           value={this.state.message}\n//           onChange={this.handleChange}\n//         />\n//         <button onClick={this.handleClick}>check</button>\n//       </div>\n//     );\n//   }\n// }\n// class EventPractice extends Component {\n//   state = {\n//     username: \"\",\n//     message: \"\",\n//   };\n//   handleChange = (e) => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n//   handleClick = () => {\n//     alert(this.state.username + \": \" + this.state.message);\n//     this.setState({\n//       username: \"\",\n//       message: \"\",\n//     });\n//   };\n//   handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       this.handleClick();\n//     }\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <h1>event practice</h1>\n//         <input\n//           type=\"text\"\n//           name=\"username\"\n//           placeholder=\"name\"\n//           value={this.state.username}\n//           onChange={this.handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"message\"\n//           placeholder=\"message\"\n//           value={this.state.message}\n//           onChange={this.handleChange}\n//           onKeyPress={this.handleKeyPress}\n//         />\n//         <button onClick={this.handleClick}>check</button>\n//       </div>\n//     );\n//   }\n// }\n// const EventPractice = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const onChangeUsername = (e) => setUsername(e.target.value);\n//   const onChangeMessage = (e) => setMessage(e.target.value);\n//   const onClick = () => {\n//     alert(username + \": \" + message);\n//     setUsername(\"\");\n//     setMessage(\"\");\n//   };\n//   const onKeyPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       onClick();\n//     }\n//   };\n//   return (\n//     <div>\n//       <h1>event practice</h1>\n//       <input\n//         type=\"text\"\n//         name=\"username\"\n//         placeholder=\"name\"\n//         value={username}\n//         onChange={onChangeUsername}\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"message\"\n//         placeholder=\"message\"\n//         value={message}\n//         onChange={onChangeMessage}\n//         onKeyPress={onKeyPress}\n//       />\n//       <button onClick={onClick}>check</button>\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventPractice = () => {\n  _s();\n\n  const [form, setForm] = useState({\n    username: \"\",\n    message: \"\"\n  });\n  const {\n    username,\n    message\n  } = form;\n\n  const onChange = e => {\n    setTimeout(() => console.log(e), 500);\n    const nextFrom = { ...form,\n      //기존의 form 내용을 이 자리에 복사 한 뒤\n      [e.target.name]: e.target.value //원하는 값을 덮어씌우기\n\n    };\n    setForm(nextFrom);\n  };\n\n  const onClick = () => {\n    alert(username + \": \" + message);\n    setForm({\n      username: \"\",\n      message: \"\"\n    });\n  };\n\n  const onKeyPress = e => {\n    if (e.key === \"Enter\") {\n      onClick();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"event practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"name\",\n      value: username,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"message\",\n      placeholder: \"message\",\n      value: message,\n      onChange: onChange,\n      onKeyPress: onKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventPractice, \"nAttgLrAPGvhOaiTkpyIjQfisHc=\");\n\n_c = EventPractice;\nexport default EventPractice;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventPractice\");","map":{"version":3,"names":["Component","useState","EventPractice","form","setForm","username","message","onChange","e","setTimeout","console","log","nextFrom","target","name","value","onClick","alert","onKeyPress","key"],"sources":["C:/react/hello-react/src/EventPractice..js"],"sourcesContent":["import { Component, useState } from \"react\";\r\n\r\n// class EventPractice extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>event practice</h1>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"message\"\r\n//           placeholder=\"here\"\r\n//           onChange={(e) => {\r\n//             console.log(e);\r\n//             console.log(e.target.value);\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class EventPractice extends Component {\r\n//   state = {\r\n//     message: \"\",\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>event practice</h1>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"message\"\r\n//           placeholder=\"here\"\r\n//           onChange={(e) => {\r\n//             this.setState({\r\n//               message: e.target.value,\r\n//             });\r\n//             console.log(this.state.message);\r\n//           }}\r\n//         />\r\n//         <button\r\n//           onClick={() => {\r\n//             alert(this.state.message);\r\n//             this.setState({\r\n//               message: \"\",\r\n//             });\r\n//           }}\r\n//         >\r\n//           check\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class EventPractice extends Component {\r\n//   state = {\r\n//     message: \"\",\r\n//   };\r\n\r\n//   //일반 함수 형식 : 생성자 바인딩 필요\r\n//   //   constructor(props) {\r\n//   //     super(props);\r\n//   //     this.handleChange = this.handleChange.bind(this);\r\n//   //     this.handleClick = this.handleClick.bind(this);\r\n//   //   }\r\n//   //   handleChange(e) {\r\n//   //     this.setState({\r\n//   //       message: e.target.value,\r\n//   //     });\r\n//   //     console.log(e.target.value);\r\n//   //   }\r\n//   //   handleClick() {\r\n//   //     this.setState({\r\n//   //       message: \"\",\r\n//   //     });\r\n//   //   }\r\n\r\n//   //화살표 함수 바인딩 불필요\r\n//   handleChange = (e) => {\r\n//     this.setState({\r\n//       message: e.target.value,\r\n//     });\r\n//     alert(e.target.name);\r\n//   };\r\n//   handleClick = () => {\r\n//     this.setState({\r\n//       message: \"\",\r\n//     });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>event practice</h1>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"message_name\"\r\n//           placeholder=\"here\"\r\n//           value={this.state.message}\r\n//           onChange={this.handleChange}\r\n//         />\r\n//         <button onClick={this.handleClick}>check</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class EventPractice extends Component {\r\n//   state = {\r\n//     username: \"\",\r\n//     id: \"\",\r\n//     message: \"\",\r\n//   };\r\n\r\n//   handleChange = (e) => {\r\n//     this.setState({\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n//   handleClick = () => {\r\n//     alert(this.state.username + \": \" + this.state.message);\r\n//     this.setState({\r\n//       username: \"\",\r\n//       id: \"\",\r\n//       message: \"\",\r\n//     });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>event practice</h1>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"username\"\r\n//           placeholder=\"name\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"id\"\r\n//           placeholder=\"id\"\r\n//           value={this.state.id}\r\n//           onChange={this.handleChange}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"message\"\r\n//           placeholder=\"message\"\r\n//           value={this.state.message}\r\n//           onChange={this.handleChange}\r\n//         />\r\n//         <button onClick={this.handleClick}>check</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class EventPractice extends Component {\r\n//   state = {\r\n//     username: \"\",\r\n//     message: \"\",\r\n//   };\r\n\r\n//   handleChange = (e) => {\r\n//     this.setState({\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n//   handleClick = () => {\r\n//     alert(this.state.username + \": \" + this.state.message);\r\n//     this.setState({\r\n//       username: \"\",\r\n//       message: \"\",\r\n//     });\r\n//   };\r\n//   handleKeyPress = (e) => {\r\n//     if (e.key === \"Enter\") {\r\n//       this.handleClick();\r\n//     }\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>event practice</h1>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"username\"\r\n//           placeholder=\"name\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"message\"\r\n//           placeholder=\"message\"\r\n//           value={this.state.message}\r\n//           onChange={this.handleChange}\r\n//           onKeyPress={this.handleKeyPress}\r\n//         />\r\n//         <button onClick={this.handleClick}>check</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const EventPractice = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const onChangeUsername = (e) => setUsername(e.target.value);\r\n//   const onChangeMessage = (e) => setMessage(e.target.value);\r\n//   const onClick = () => {\r\n//     alert(username + \": \" + message);\r\n//     setUsername(\"\");\r\n//     setMessage(\"\");\r\n//   };\r\n\r\n//   const onKeyPress = (e) => {\r\n//     if (e.key === \"Enter\") {\r\n//       onClick();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>event practice</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"username\"\r\n//         placeholder=\"name\"\r\n//         value={username}\r\n//         onChange={onChangeUsername}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"message\"\r\n//         placeholder=\"message\"\r\n//         value={message}\r\n//         onChange={onChangeMessage}\r\n//         onKeyPress={onKeyPress}\r\n//       />\r\n//       <button onClick={onClick}>check</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst EventPractice = () => {\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    message: \"\",\r\n  });\r\n  const { username, message } = form;\r\n  const onChange = (e) => {\r\n    setTimeout(() => console.log(e), 500);\r\n    const nextFrom = {\r\n      ...form, //기존의 form 내용을 이 자리에 복사 한 뒤\r\n      [e.target.name]: e.target.value, //원하는 값을 덮어씌우기\r\n    };\r\n    setForm(nextFrom);\r\n  };\r\n  const onClick = () => {\r\n    alert(username + \": \" + message);\r\n    setForm({\r\n      username: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>event practice</h1>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        placeholder=\"name\"\r\n        value={username}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"message\"\r\n        placeholder=\"message\"\r\n        value={message}\r\n        onChange={onChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <button onClick={onClick}>check</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPractice;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApaAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;IAC/BI,QAAQ,EAAE,EADqB;IAE/BC,OAAO,EAAE;EAFsB,CAAD,CAAhC;EAIA,MAAM;IAAED,QAAF;IAAYC;EAAZ,IAAwBH,IAA9B;;EACA,MAAMI,QAAQ,GAAIC,CAAD,IAAO;IACtBC,UAAU,CAAC,MAAMC,OAAO,CAACC,GAAR,CAAYH,CAAZ,CAAP,EAAuB,GAAvB,CAAV;IACA,MAAMI,QAAQ,GAAG,EACf,GAAGT,IADY;MACN;MACT,CAACK,CAAC,CAACK,MAAF,CAASC,IAAV,GAAiBN,CAAC,CAACK,MAAF,CAASE,KAFX,CAEkB;;IAFlB,CAAjB;IAIAX,OAAO,CAACQ,QAAD,CAAP;EACD,CAPD;;EAQA,MAAMI,OAAO,GAAG,MAAM;IACpBC,KAAK,CAACZ,QAAQ,GAAG,IAAX,GAAkBC,OAAnB,CAAL;IACAF,OAAO,CAAC;MACNC,QAAQ,EAAE,EADJ;MAENC,OAAO,EAAE;IAFH,CAAD,CAAP;EAID,CAND;;EAQA,MAAMY,UAAU,GAAIV,CAAD,IAAO;IACxB,IAAIA,CAAC,CAACW,GAAF,KAAU,OAAd,EAAuB;MACrBH,OAAO;IACR;EACF,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,IAAI,EAAC,MADP;MAEE,IAAI,EAAC,UAFP;MAGE,WAAW,EAAC,MAHd;MAIE,KAAK,EAAEX,QAJT;MAKE,QAAQ,EAAEE;IALZ;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MACE,IAAI,EAAC,MADP;MAEE,IAAI,EAAC,SAFP;MAGE,WAAW,EAAC,SAHd;MAIE,KAAK,EAAED,OAJT;MAKE,QAAQ,EAAEC,QALZ;MAME,UAAU,EAAEW;IANd;MAAA;MAAA;MAAA;IAAA,QATF,eAiBE;MAAQ,OAAO,EAAEF,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAjDD;;GAAMd,a;;KAAAA,a;AAmDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}